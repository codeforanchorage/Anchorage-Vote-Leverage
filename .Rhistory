"31-320 Fox River", "31-340 Funny River No. 2", "31-350 Homer No. 1",
"31-360 Homer No. 2", "31-370 Kachemak/Fritz Creek", "31-380 Kasilof",
"31-390 Ninilchik", "32-805 Cordova", "32-810 Flats", "32-820 Kodiak No. 1",
"32-830 Mission Road", "32-847 Seldovia/Kachemak Bay", "32-860 Yakutat",
"33-500 Douglas", "33-510 Juneau No. 1", "33-515 Juneau No. 2",
"33-530 North Douglas", "34-420 Lynn Canal", "35-700 Angoon",
"35-770 Sitka No. 2", "36-600 Ketchikan No. 1", "36-610 Ketchikan No. 2",
"36-620 Ketchikan No. 3", "36-640 North Tongass No. 1", "36-650 North Tongass No. 2",
"36-660 Saxman", "36-670 South Tongass", "37-714 Dillingham",
"38-810 Bethel No. 2", "39-924 Nome No. 1", "39-926 Nome No. 2",
"District 4 - Absentee", "District 6 - Absentee", "District 7 - Absentee",
"District 8 - Absentee", "District 9 - Absentee", "District 10 - Absentee",
"District 11 - Absentee", "District 12 - Absentee", "District 18 - Absentee",
"District 20 - Absentee", "District 21 - Absentee", "District 22 - Absentee",
"District 23 - Absentee", "District 24 - Absentee", "District 28 - Absentee",
"District 31 - Absentee", "District 32 - Absentee", "District 33 - Absentee",
"District 35 - Absentee", "District 36 - Absentee", "District 38 - Absentee",
"District 40 - Absentee", "District 4 - Question", "District 5 - Question",
"District 7 - Question", "District 8 - Question", "District 9 - Question",
"District 10 - Question", "District 11 - Question", "District 12 - Question",
"District 14 - Question", "District 17 - Question", "District 24 - Question",
"District 32 - Question", "District 36 - Question", "District 1 - Early Voting",
"District 2 - Early Voting", "District 3 - Early Voting", "District 4 - Early Voting",
"District 5 - Early Voting", "District 6 - Early Voting", "District 7 - Early Voting",
"District 8 - Early Voting", "District 9 - Early Voting", "District 10 - Early Voting",
"District 12 - Early Voting", "District 16 - Early Voting", "District 17 - Early Voting",
"District 18 - Early Voting", "District 20 - Early Voting", "District 21 - Early Voting",
"District 22 - Early Voting", "District 23 - Early Voting", "District 24 - Early Voting",
"District 25 - Early Voting", "District 26 - Early Voting", "District 27 - Early Voting",
"District 28 - Early Voting", "District 33 - Early Voting", "District 39 - Early Voting"
)
voting_results <- voting_results %>%
filter(DISTRICT %in% district_to_filter_for)
#Find difference in votes between yes and no
input <- list(House_Can = "Young", Gov_Can = "Walker",
HouseQuantile = .75,
GovQuantile = 0.6,
Prop1Quantile = .3,
Prop2Quantile = .5,
Prop3Quantile = .5,
Prop4Quantile = .2)
Yes_Votes <- voting_results %>%
unique() %>%
filter(Race %in% c("Ballot Measure 2 - 13PSUM", "Ballot Measure 3 - 13MINW", "Ballot Measure 4 - 12BBAY", "MOA Proposition #1")) %>%
filter(! Value == "Registered Voters") %>%
group_by(DISTRICT, Race) %>%
mutate(Difference = (n - (sum(n)) + n)) %>%
filter(Value == "YES") %>%
select(DISTRICT, Race, Difference) %>%
as.data.frame()
Yes_Votes <- spread(Yes_Votes, Race, Difference)
colnames(Yes_Votes) <- c(c("District", "Prop1", "Prop2", "Prop3", "Prop4"))
quantile(Yes_Votes[,2], 0.4)
Gov_Votes <- voting_results %>%
unique() %>%
filter(Race %in% c("GOVERNOR/LT GOVERNOR")) %>%
filter(! Value == "Registered Voters") %>%
group_by(DISTRICT) %>%
mutate(Difference = (n - (sum(n)) + n)) %>%
select(DISTRICT, Value, Difference) %>%
as.data.frame()
Gov_Votes <- spread(Gov_Votes, Value, Difference)
colnames(Gov_Votes) <- c("District", "Clift", "Myers", "Parnell", "Walker", "Write-in")
Gov_Votes <- Gov_Votes[,-6]
House_Votes <- voting_results %>%
unique() %>%
filter(Race %in% c("US REPRESENTATIVE")) %>%
filter(! Value == "Registered Voters") %>%
group_by(DISTRICT) %>%
mutate(Difference = (n - (sum(n)) + n)) %>%
select(DISTRICT, Value, Difference) %>%
as.data.frame()
House_Votes <- spread(House_Votes, Value, Difference)
colnames(House_Votes) <- c("District", "Dunbar", "McDermott", "Write-in 50", "Young")
House_Votes <- House_Votes[,-4]
#hist(House_Votes[,5])
n_Votes <- voting_results %>%
unique() %>%
filter(Race %in% c("GOVERNOR/LT GOVERNOR")) %>%
filter(! Value == "Registered Voters") %>%
group_by(DISTRICT) %>%
mutate(Total_Votes = (sum(n))) %>%
select(DISTRICT, Total_Votes) %>%
unique() %>%
select(-DISTRICT)
app_data <- cbind(House_Votes, n_Votes, Gov_Votes, Yes_Votes)
app_data <- app_data[!duplicated(lapply(app_data, summary))]
save(app_data, file = "app_data.rda")
filtered_dat_yes <- dat %>%
filter(Race == "Ballot Measure 2 - 13PSUM") %>%
filter(Value == "YES") %>%
select(n)
filtered_dat_no <- dat %>%
filter(Race == "Ballot Measure 2 - 13PSUM") %>%
filter(Value == "NO") %>%
select(n)
filtered_dat_registered <- dat %>%
filter(Race == "Ballot Measure 2 - 13PSUM") %>%
filter(Value == "Registered Voters") %>%
select(n)
filtered_dat <- cbind(filtered_dat_no, var = filtered_dat_yes$n  / (filtered_dat_no$n + filtered_dat_yes$n))
mapping_obj <- inner_join(filtered_dat ,anc.df, by="DISTRICT")
anc <- get_map("anchorage, AK", zoom = 8)
p <- ggmap(anc)
p +  geom_polygon(data = mapping_obj, aes(long,lat,group=DISTRICT, fill = var), alpha = 0.5)
ggplot(data = mapping_obj, aes(long,lat,group=DISTRICT, fill = var)) +
rm(list = ls())
rm(list = ls())
library(dplyr)
library(tidyr)
library(shiny)
load("app_data.rda")
reactive_df <- reactive({
if(input$House_Can == "Dunbar")         {house_percentile <- quantile(app_data$Dunbar, input$HouseQuantile) }
if(input$House_Can == "McDermott") {house_percentile <- quantile(app_data$McDermott, input$HouseQuantile)}
if(input$House_Can == "Young")     {house_percentile <- quantile(app_data$Young, input$HouseQuantile)}
if(input$Gov_Can == "Clift")           {gov_percentile <- quantile(app_data$Clift, input$GovQuantile) }
if(input$Gov_Can == "Myers")      {gov_percentile <- quantile(app_data$Myers, input$GovQuantile)}
if(input$Gov_Can == "Parnell")    {gov_percentile <- quantile(app_data$Parnell, input$GovQuantile)}
if(input$Gov_Can == "Walker")     {gov_percentile <- quantile(app_data$Walker, input$HouseQuantile)}
one_percentile   <- quantile(app_data$Prop1, input$Prop1Quantile)
two_percentile   <- quantile(app_data$Prop2, input$Prop2Quantile)
three_percentile <- quantile(app_data$Prop3, input$Prop3Quantile)
four_percentile  <- quantile(app_data$Prop4, input$Prop3Quantile)
app_data <- app_data[, c("District","Total_Votes", input$House_Can, input$Gov_Can, "Prop1", "Prop2",       "Prop3",       "Prop4")]
df <- data.frame(x = c(1,2), y = c(0, 3), z = c(3, 0))
gov_diff   <- gov_percentile - app_data[,input$Gov_Can]
house_diff <- house_percentile - app_data[,input$House_Can]
one_diff   <- one_percentile - app_data$Prop1
two_diff   <- two_percentile- app_data$Prop2
three_diff <- three_percentile - app_data$Prop3
four_diff  <- four_percentile - app_data$Prop4
vote_distance <- sqrt(
gov_diff^2 +
house_diff^2 +
one_diff^2 +
two_diff^2  +
three_diff^2 +
four_diff^2
)
data.frame(District = app_data$District,
gov_diff,
house_diff,
one_diff,
two_diff,
three_diff,
four_diff,
vote_distance
)
})
data.frame(District = app_data$District,
gov_diff,
house_diff,
one_diff,
two_diff,
three_diff,
four_diff,
vote_distance
)
if(input$House_Can == "Dunbar")         {house_percentile <- quantile(app_data$Dunbar, input$HouseQuantile) }
if(input$House_Can == "McDermott") {house_percentile <- quantile(app_data$McDermott, input$HouseQuantile)}
if(input$House_Can == "Young")     {house_percentile <- quantile(app_data$Young, input$HouseQuantile)}
if(input$Gov_Can == "Clift")           {gov_percentile <- quantile(app_data$Clift, input$GovQuantile) }
if(input$Gov_Can == "Myers")      {gov_percentile <- quantile(app_data$Myers, input$GovQuantile)}
if(input$Gov_Can == "Parnell")    {gov_percentile <- quantile(app_data$Parnell, input$GovQuantile)}
if(input$Gov_Can == "Walker")     {gov_percentile <- quantile(app_data$Walker, input$HouseQuantile)}
one_percentile   <- quantile(app_data$Prop1, input$Prop1Quantile)
two_percentile   <- quantile(app_data$Prop2, input$Prop2Quantile)
three_percentile <- quantile(app_data$Prop3, input$Prop3Quantile)
four_percentile  <- quantile(app_data$Prop4, input$Prop3Quantile)
app_data <- app_data[, c("District","Total_Votes", input$House_Can, input$Gov_Can, "Prop1", "Prop2",       "Prop3",       "Prop4")]
df <- data.frame(x = c(1,2), y = c(0, 3), z = c(3, 0))
gov_diff   <- gov_percentile - app_data[,input$Gov_Can]
house_diff <- house_percentile - app_data[,input$House_Can]
one_diff   <- one_percentile - app_data$Prop1
two_diff   <- two_percentile- app_data$Prop2
three_diff <- three_percentile - app_data$Prop3
four_diff  <- four_percentile - app_data$Prop4
vote_distance <- sqrt(
gov_diff^2 +
house_diff^2 +
one_diff^2 +
two_diff^2  +
three_diff^2 +
four_diff^2
)
data.frame(District = app_data$District,
gov_diff,
house_diff,
one_diff,
two_diff,
three_diff,
four_diff,
vote_distance
)
input <- list(House_Can = "Young", Gov_Can = "Walker", HouseQuantile = .75, GovQuantile = 0.6, Prop1Quantile = .3, Prop2Quantile = .5, Prop3Quantile = .5, Prop4Quantile = .2)
library(dplyr)
library(tidyr)
library(shiny)
load("app_data.rda")
input <- list(House_Can = "Young", Gov_Can = "Walker", HouseQuantile = .75, GovQuantile = 0.6, Prop1Quantile = .3, Prop2Quantile = .5, Prop3Quantile = .5, Prop4Quantile = .2)
reactive_df <- reactive({
if(input$House_Can == "Dunbar")         {house_percentile <- quantile(app_data$Dunbar, input$HouseQuantile) }
if(input$House_Can == "McDermott") {house_percentile <- quantile(app_data$McDermott, input$HouseQuantile)}
if(input$House_Can == "Young")     {house_percentile <- quantile(app_data$Young, input$HouseQuantile)}
if(input$Gov_Can == "Clift")           {gov_percentile <- quantile(app_data$Clift, input$GovQuantile) }
if(input$Gov_Can == "Myers")      {gov_percentile <- quantile(app_data$Myers, input$GovQuantile)}
if(input$Gov_Can == "Parnell")    {gov_percentile <- quantile(app_data$Parnell, input$GovQuantile)}
if(input$Gov_Can == "Walker")     {gov_percentile <- quantile(app_data$Walker, input$HouseQuantile)}
one_percentile   <- quantile(app_data$Prop1, input$Prop1Quantile)
two_percentile   <- quantile(app_data$Prop2, input$Prop2Quantile)
three_percentile <- quantile(app_data$Prop3, input$Prop3Quantile)
four_percentile  <- quantile(app_data$Prop4, input$Prop3Quantile)
app_data <- app_data[, c("District","Total_Votes", input$House_Can, input$Gov_Can, "Prop1", "Prop2",       "Prop3",       "Prop4")]
df <- data.frame(x = c(1,2), y = c(0, 3), z = c(3, 0))
gov_diff   <- gov_percentile - app_data[,input$Gov_Can]
house_diff <- house_percentile - app_data[,input$House_Can]
one_diff   <- one_percentile - app_data$Prop1
two_diff   <- two_percentile- app_data$Prop2
three_diff <- three_percentile - app_data$Prop3
four_diff  <- four_percentile - app_data$Prop4
vote_distance <- sqrt(
gov_diff^2 +
house_diff^2 +
one_diff^2 +
two_diff^2  +
three_diff^2 +
four_diff^2
)
data.frame(District = app_data$District,
gov_diff,
house_diff,
one_diff,
two_diff,
three_diff,
four_diff,
vote_distance
)
})
ggplot(data = reactive_df, aes)
if(input$House_Can == "Dunbar")         {house_percentile <- quantile(app_data$Dunbar, input$HouseQuantile) }
if(input$House_Can == "McDermott") {house_percentile <- quantile(app_data$McDermott, input$HouseQuantile)}
if(input$House_Can == "Young")     {house_percentile <- quantile(app_data$Young, input$HouseQuantile)}
if(input$Gov_Can == "Clift")           {gov_percentile <- quantile(app_data$Clift, input$GovQuantile) }
if(input$Gov_Can == "Myers")      {gov_percentile <- quantile(app_data$Myers, input$GovQuantile)}
if(input$Gov_Can == "Parnell")    {gov_percentile <- quantile(app_data$Parnell, input$GovQuantile)}
if(input$Gov_Can == "Walker")     {gov_percentile <- quantile(app_data$Walker, input$HouseQuantile)}
one_percentile   <- quantile(app_data$Prop1, input$Prop1Quantile)
two_percentile   <- quantile(app_data$Prop2, input$Prop2Quantile)
three_percentile <- quantile(app_data$Prop3, input$Prop3Quantile)
four_percentile  <- quantile(app_data$Prop4, input$Prop3Quantile)
app_data <- app_data[, c("District","Total_Votes", input$House_Can, input$Gov_Can, "Prop1", "Prop2",       "Prop3",       "Prop4")]
df <- data.frame(x = c(1,2), y = c(0, 3), z = c(3, 0))
gov_diff   <- gov_percentile - app_data[,input$Gov_Can]
house_diff <- house_percentile - app_data[,input$House_Can]
one_diff   <- one_percentile - app_data$Prop1
two_diff   <- two_percentile- app_data$Prop2
three_diff <- three_percentile - app_data$Prop3
four_diff  <- four_percentile - app_data$Prop4
vote_distance <- sqrt(
gov_diff^2 +
house_diff^2 +
one_diff^2 +
two_diff^2  +
three_diff^2 +
four_diff^2
)
data.frame(District = app_data$District,
gov_diff,
house_diff,
one_diff,
two_diff,
three_diff,
four_diff,
vote_distance
)
ggplot(data = reactive_df(), aes( x = gov_diff, y = house_diff)) +geom_point()
library(ggplot2)
ggplot(data = reactive_df(), aes( x = gov_diff, y = house_diff)) +geom_point()
ggplot(data = reactive_df(), aes( x = gov_diff, y = house_diff)) + geom_point()
ggplot(data = reactive_df(), aes( x = gov_diff, y = house_diff)) + geom_point()
data.frame(District = app_data$District,
gov_diff,
house_diff,
one_diff,
two_diff,
three_diff,
four_diff,
vote_distance
)
x <- data.frame(District = app_data$District,
gov_diff,
house_diff,
one_diff,
two_diff,
three_diff,
four_diff,
vote_distance
)
ggplot(data = x, aes( x = gov_diff, y = house_diff)) + geom_point()
ggplot(data = reactive_df(), aes( x = gov_diff, y = house_diff)) + geom_point()
reactive_df <- reactive({
if(input$House_Can == "Dunbar")         {house_percentile <- quantile(app_data$Dunbar, input$HouseQuantile) }
if(input$House_Can == "McDermott") {house_percentile <- quantile(app_data$McDermott, input$HouseQuantile)}
if(input$House_Can == "Young")     {house_percentile <- quantile(app_data$Young, input$HouseQuantile)}
if(input$Gov_Can == "Clift")           {gov_percentile <- quantile(app_data$Clift, input$GovQuantile) }
if(input$Gov_Can == "Myers")      {gov_percentile <- quantile(app_data$Myers, input$GovQuantile)}
if(input$Gov_Can == "Parnell")    {gov_percentile <- quantile(app_data$Parnell, input$GovQuantile)}
if(input$Gov_Can == "Walker")     {gov_percentile <- quantile(app_data$Walker, input$HouseQuantile)}
one_percentile   <- quantile(app_data$Prop1, input$Prop1Quantile)
two_percentile   <- quantile(app_data$Prop2, input$Prop2Quantile)
three_percentile <- quantile(app_data$Prop3, input$Prop3Quantile)
four_percentile  <- quantile(app_data$Prop4, input$Prop3Quantile)
app_data <- app_data[, c("District","Total_Votes", input$House_Can, input$Gov_Can, "Prop1", "Prop2",       "Prop3",       "Prop4")]
df <- data.frame(x = c(1,2), y = c(0, 3), z = c(3, 0))
gov_diff   <- gov_percentile - app_data[,input$Gov_Can]
house_diff <- house_percentile - app_data[,input$House_Can]
one_diff   <- one_percentile - app_data$Prop1
two_diff   <- two_percentile- app_data$Prop2
three_diff <- three_percentile - app_data$Prop3
four_diff  <- four_percentile - app_data$Prop4
vote_distance <- sqrt(
gov_diff^2 +
house_diff^2 +
one_diff^2 +
two_diff^2  +
three_diff^2 +
four_diff^2
)
return(data.frame(District = app_data$District,
gov_diff,
house_diff,
one_diff,
two_diff,
three_diff,
four_diff,
vote_distance
))
})
ggplot(data = reactive_df(), aes( x = gov_diff, y = house_diff)) + geom_point()
ggplot(data = reactive_df(), aes( x = gov_diff, y = house_diff)) + geom_point()
reactive_df()
df <- data.frame(District = app_data$District,
gov_diff,
house_diff,
one_diff,
two_diff,
three_diff,
four_diff,
vote_distance)
ggplot(data = df, aes( x = gov_diff, y = house_diff)) + geom_point()
library(dplyr)
library(tidyr)
library(shiny)
library(ggplot2)
load("app_data.rda")
input <- list(House_Can = "Young", Gov_Can = "Walker", HouseQuantile = .75, GovQuantile = 0.6, Prop1Quantile = .3, Prop2Quantile = .5, Prop3Quantile = .5, Prop4Quantile = .2)
reactive_plot <- reactive({
if(input$House_Can == "Dunbar")         {house_percentile <- quantile(app_data$Dunbar, input$HouseQuantile) }
if(input$House_Can == "McDermott") {house_percentile <- quantile(app_data$McDermott, input$HouseQuantile)}
if(input$House_Can == "Young")     {house_percentile <- quantile(app_data$Young, input$HouseQuantile)}
if(input$Gov_Can == "Clift")           {gov_percentile <- quantile(app_data$Clift, input$GovQuantile) }
if(input$Gov_Can == "Myers")      {gov_percentile <- quantile(app_data$Myers, input$GovQuantile)}
if(input$Gov_Can == "Parnell")    {gov_percentile <- quantile(app_data$Parnell, input$GovQuantile)}
if(input$Gov_Can == "Walker")     {gov_percentile <- quantile(app_data$Walker, input$HouseQuantile)}
one_percentile   <- quantile(app_data$Prop1, input$Prop1Quantile)
two_percentile   <- quantile(app_data$Prop2, input$Prop2Quantile)
three_percentile <- quantile(app_data$Prop3, input$Prop3Quantile)
four_percentile  <- quantile(app_data$Prop4, input$Prop3Quantile)
app_data <- app_data[, c("District","Total_Votes", input$House_Can, input$Gov_Can, "Prop1", "Prop2",       "Prop3",       "Prop4")]
df <- data.frame(x = c(1,2), y = c(0, 3), z = c(3, 0))
gov_diff   <- gov_percentile - app_data[,input$Gov_Can]
house_diff <- house_percentile - app_data[,input$House_Can]
one_diff   <- one_percentile - app_data$Prop1
two_diff   <- two_percentile- app_data$Prop2
three_diff <- three_percentile - app_data$Prop3
four_diff  <- four_percentile - app_data$Prop4
vote_distance <- sqrt(
gov_diff^2 +
house_diff^2 +
one_diff^2 +
two_diff^2  +
three_diff^2 +
four_diff^2
)
df <- data.frame(District = app_data$District,
gov_diff,
house_diff,
one_diff,
two_diff,
three_diff,
four_diff,
vote_distance)
ggplot(data = df, aes( x = gov_diff, y = house_diff)) + geom_point()
})
output$textscatter <- renderPlot({
print(reactive_plot())
})
library(dplyr)
library(tidyr)
library(shiny)
library(ggplot2)
load("app_data.rda")
input <- list(House_Can = "Young", Gov_Can = "Walker", HouseQuantile = .75, GovQuantile = 0.6, Prop1Quantile = .3, Prop2Quantile = .5, Prop3Quantile = .5, Prop4Quantile = .2)
shinyServer(function(input, output, session) {
reactive_plot <- reactive({
if(input$House_Can == "Dunbar")         {house_percentile <- quantile(app_data$Dunbar, input$HouseQuantile) }
if(input$House_Can == "McDermott") {house_percentile <- quantile(app_data$McDermott, input$HouseQuantile)}
if(input$House_Can == "Young")     {house_percentile <- quantile(app_data$Young, input$HouseQuantile)}
if(input$Gov_Can == "Clift")           {gov_percentile <- quantile(app_data$Clift, input$GovQuantile) }
if(input$Gov_Can == "Myers")      {gov_percentile <- quantile(app_data$Myers, input$GovQuantile)}
if(input$Gov_Can == "Parnell")    {gov_percentile <- quantile(app_data$Parnell, input$GovQuantile)}
if(input$Gov_Can == "Walker")     {gov_percentile <- quantile(app_data$Walker, input$HouseQuantile)}
one_percentile   <- quantile(app_data$Prop1, input$Prop1Quantile)
two_percentile   <- quantile(app_data$Prop2, input$Prop2Quantile)
three_percentile <- quantile(app_data$Prop3, input$Prop3Quantile)
four_percentile  <- quantile(app_data$Prop4, input$Prop3Quantile)
app_data <- app_data[, c("District","Total_Votes", input$House_Can, input$Gov_Can, "Prop1", "Prop2",       "Prop3",       "Prop4")]
df <- data.frame(x = c(1,2), y = c(0, 3), z = c(3, 0))
gov_diff   <- gov_percentile - app_data[,input$Gov_Can]
house_diff <- house_percentile - app_data[,input$House_Can]
one_diff   <- one_percentile - app_data$Prop1
two_diff   <- two_percentile- app_data$Prop2
three_diff <- three_percentile - app_data$Prop3
four_diff  <- four_percentile - app_data$Prop4
vote_distance <- sqrt(
gov_diff^2 +
house_diff^2 +
one_diff^2 +
two_diff^2  +
three_diff^2 +
four_diff^2
)
df <- data.frame(District = app_data$District,
gov_diff,
house_diff,
one_diff,
two_diff,
three_diff,
four_diff,
vote_distance)
ggplot(data = df, aes( x = gov_diff, y = house_diff)) + geom_point()
})
output$testplot <- renderPlot({
print(reactive_plot())
})
})
shiny::runApp()
library(dplyr)
library(tidyr)
library(shiny)
library(ggplot2)
load("app_data.rda")
input <- list(House_Can = "Young", Gov_Can = "Walker", HouseQuantile = .75, GovQuantile = 0.6, Prop1Quantile = .3, Prop2Quantile = .5, Prop3Quantile = .5, Prop4Quantile = .2)
shinyServer(function(input, output, session) {
reactive_plot <- reactive({
if(input$House_Can == "Dunbar")         {house_percentile <- quantile(app_data$Dunbar, input$HouseQuantile) }
if(input$House_Can == "McDermott") {house_percentile <- quantile(app_data$McDermott, input$HouseQuantile)}
if(input$House_Can == "Young")     {house_percentile <- quantile(app_data$Young, input$HouseQuantile)}
if(input$Gov_Can == "Clift")           {gov_percentile <- quantile(app_data$Clift, input$GovQuantile) }
if(input$Gov_Can == "Myers")      {gov_percentile <- quantile(app_data$Myers, input$GovQuantile)}
if(input$Gov_Can == "Parnell")    {gov_percentile <- quantile(app_data$Parnell, input$GovQuantile)}
if(input$Gov_Can == "Walker")     {gov_percentile <- quantile(app_data$Walker, input$HouseQuantile)}
one_percentile   <- quantile(app_data$Prop1, input$Prop1Quantile)
two_percentile   <- quantile(app_data$Prop2, input$Prop2Quantile)
three_percentile <- quantile(app_data$Prop3, input$Prop3Quantile)
four_percentile  <- quantile(app_data$Prop4, input$Prop3Quantile)
app_data <- app_data[, c("District","Total_Votes", input$House_Can, input$Gov_Can, "Prop1", "Prop2",       "Prop3",       "Prop4")]
df <- data.frame(x = c(1,2), y = c(0, 3), z = c(3, 0))
gov_diff   <- gov_percentile - app_data[,input$Gov_Can]
house_diff <- house_percentile - app_data[,input$House_Can]
one_diff   <- one_percentile - app_data$Prop1
two_diff   <- two_percentile- app_data$Prop2
three_diff <- three_percentile - app_data$Prop3
four_diff  <- four_percentile - app_data$Prop4
vote_distance <- sqrt(
gov_diff^2 +
house_diff^2 +
one_diff^2 +
two_diff^2  +
three_diff^2 +
four_diff^2
)
df <- data.frame(District = app_data$District,
gov_diff,
house_diff,
one_diff,
two_diff,
three_diff,
four_diff,
vote_distance)
ggplot(data = df, aes( x = vote_distance, label = District)) + geom_bar()
})
output$testplot <- renderPlot({
print(reactive_plot())  })
})
shiny::runApp()
vote_distance
df
ggplot(data = df, aes( x = vote_distance, label = District)) + geom_bar()
ggplot(data = df, aes( x = vote_distance, label = District)) + geom_bar(stat = "identity")
shiny::runApp()
shiny::runApp()
df
Total_Votes
app_data
shiny::runApp()
df
df
shiny::runApp()
shiny::runApp()
shiny::runApp()
